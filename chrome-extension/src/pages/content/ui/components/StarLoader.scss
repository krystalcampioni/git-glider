@use "sass:math";

@function bell-curve($i, $min, $max, $steps) {
  $mid: math.ceil(math.div($steps, 2));
  $value: 0;

  @if $i > $mid {
    $value: $steps - $i + 1;
  } @else {
    $value: $i;
  }

  @return $min + math.div(($max - $min) * ($value - 1), math.div($mid, 1));
}

.StarLoader {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;

  $base-color: #036;

  $total-steps: 5;

  @for $i from 1 through $total-steps {
    $delay: $i * 0.2;
    $duration: 1.5;

    .SparkleContainer-#{$i} .Sparkle {
      fill: yellow;
      animation: sparkleScale #{$duration}s infinite;
      animation-delay: #{$delay}s;
    }

    .SparkleContainer:nth-of-type(#{$i}) {
      $new-size: bell-curve($i, 0.3, 1, $total-steps);
      transform: scale(#{$new-size});
      animation: sparkleTranslate #{$duration}s infinite;
      animation-delay: #{$delay}s;
    }
  }
}

.Sparkle {
  transform-origin: center;
  opacity: 0;
}

@keyframes sparkleTranslate {
  from {
    transform: translateY(0);
  }
  to {
    transform: translateY(-60px);
  }
}

@keyframes sparkleScale {
  0% {
    transform: scale(0);
    opacity: 0;
  }
  50% {
    transform: scale(0.4);
    opacity: 1;
  }
  100% {
    transform: scale(0);
    opacity: 0;
  }
}

#git-glider-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 1000;
}
